// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoListProject.DataAccess;

#nullable disable

namespace TodoListProject.Migrations
{
    [DbContext(typeof(TodoContext))]
    [Migration("20221125125002_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("TodoListProject.Entities.Todo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("done")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("dueDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("todoTypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("todoTypeId");

                    b.ToTable("todoList");
                });

            modelBuilder.Entity("TodoListProject.Entities.TodoTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("todoTypeEntities");
                });

            modelBuilder.Entity("TodoListProject.Entities.Todo", b =>
                {
                    b.HasOne("TodoListProject.Entities.TodoTypeEntity", "todoType")
                        .WithMany("todosWithThisType")
                        .HasForeignKey("todoTypeId");

                    b.Navigation("todoType");
                });

            modelBuilder.Entity("TodoListProject.Entities.TodoTypeEntity", b =>
                {
                    b.Navigation("todosWithThisType");
                });
#pragma warning restore 612, 618
        }
    }
}
